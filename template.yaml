AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-api-gateway-file-upload-service 
   APIs for uploading files to AWS S3 through AWS API Gateway

Globals:
  Function:
    Timeout: 30
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'Origin,X-Requested-With,Content-Type,content-type,Accept'"
      AllowOrigin: "'*'"

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      BinaryMediaTypes:
        - "*/*"
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: "AwsApiGatewayFileUploadService"
        paths:
          /upload:
            x-amazon-apigateway-any-method:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: post
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UploadFunction.Arn}/invocations
          /ping:
            x-amazon-apigateway-any-method:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: post
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PingFunction.Arn}/invocations

  PingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.ping
      Runtime: nodejs8.10
  PingFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PingFunction
      Principal: apigateway.amazonaws.com
  UploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.upload
      Runtime: nodejs8.10
  UploadFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UploadFunction
      Principal: apigateway.amazonaws.com
